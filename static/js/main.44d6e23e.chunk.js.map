{"version":3,"sources":["themes/theme.ts","i18n.ts","translations/en.ts","translations/kr.ts","translations/cn.ts","containers/LanguageMenu/index.tsx","containers/LanguageMenu/LanguageMenu.tsx","containers/MyApp.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","momentMap","kr","cn","en-US","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","Date","Pristine","Change Language","Toggle Dark Mode","Configuration","Back","interpolation","escapeValue","format","value","lng","ln","moment","locale","reverseSupportedLanguages","EN","中文","한국어","supportedLanguages","LanguageMenu","_useTranslation","useTranslation","t","_React$useState","React","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","react","Tooltip","title","Button","onClick","event","currentTarget","language","Menu","id","keepMounted","open","Boolean","onClose","values","map","lang","i","MenuItem","changeLanguage","handleMenuItemClick","MyApp","darkMode","useDarkMode","_useState","useState","_useState2","isEditorReady","setIsEditorReady","_useState3","_useState4","results","setResults","valueGetter","useRef","theme","react_default","a","createElement","ThemeProvider","AppBar","Toolbar","Grid","container","alignContent","alignItems","justify","Typography","variant","style","paddingRight","IconButton","editorValue","current","disabled","PlayCircleFilled_default","containers_LanguageMenu","toggle","Brightness3_default","WbSunny_default","CssBaseline","index_esm","split","minSize","maxSize","defaultSize","flexGrow","lib_default","editorDidMount","vg","ReactDOM","render","src_containers_MyApp","document","getElementById"],"mappings":"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","file":"static/js/main.44d6e23e.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport enJSON from \"./translations/en\";\nimport krJSON from \"./translations/kr\";\nimport cnJSON from \"./translations/cn\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-ca\";\nimport i18next from \"i18next\";\n\ninterface IMap {\n  [key: string]: string;\n}\n\nconst momentMap: IMap = {\n  \"kr\": \"ko\",\n  \"cn\": \"zh-cn\",\n  \"en-US\": \"en-ca\",\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enJSON },\n      kr: { translation: krJSON },\n      cn: { translation: cnJSON },\n    },\n    interpolation: {\n      escapeValue: false,\n      format: (value, format, lng) => {\n        if (!lng) {\n          return;\n        }\n        const ln = momentMap[lng];\n        switch (format) {\n          case \"date\":\n            return moment(value).locale(ln || \"en\").format(\"MMMM Do YYYY, h:mm:ss a\") as any;\n          default:\n            break;\n        }\n      },\n    },\n  });\n\nexport const reverseSupportedLanguages: IMap = {\n  \"EN\": \"en-US\", //tslint:disable-line\n  \"中文\": \"cn\", //tslint:disable-line\n  \"한국어\": \"kr\", //tslint:disable-line\n};\n\nexport const supportedLanguages: IMap = {\n  \"en-US\": \"EN\",\n  \"cn\": \"中文\",\n  \"kr\": \"한국어\",\n};\n\nexport const changeLanguage = (l: string) => {\n  return i18next.changeLanguage(l);\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"Change Language\",\n  \"Toggle Dark Mode\": \"Toggle Dark Mode\",\n  \"Configuration\": \"Configuration\",\n  \"Back\": \"Back\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"언어 변경\",\n  \"Toggle Dark Mode\": \"블랙모드 변경\",\n  \"Configuration\": \"구성\",\n  \"Back\": \"뒤로\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"更改语言\",\n  \"Toggle Dark Mode\": \"切换黑暗模式\",\n  \"Configuration\": \"配置\",\n  \"Back\": \"返回\",\n};\n","import LanguageMenu from \"./LanguageMenu\";\nexport default LanguageMenu;\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { supportedLanguages, reverseSupportedLanguages } from \"../../i18n\";\n\nconst LanguageMenu: React.FC = (props) => {\n  const { t, i18n } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (lang: string) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    i18n.changeLanguage(reverseSupportedLanguages[lang]);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Tooltip title={t(\"Change Language\")}>\n        <Button onClick={handleClick}>{supportedLanguages[i18n.language]}</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.values(supportedLanguages).map((lang, i) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(lang)}>{lang}</MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageMenu;\n","import React, { useState, useRef } from \"react\";\nimport { MuiThemeProvider, AppBar, Toolbar, Typography, IconButton, Tooltip, CssBaseline, Grid } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { lightTheme, darkTheme } from \"../themes/theme\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageMenu from \"./LanguageMenu\";\nimport SplitPane from \"react-split-pane\";\nimport Editor from \"@monaco-editor/react\";\n\nimport \"./MyApp.css\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\n\nconst MyApp: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [results, setResults] = useState();\n  const valueGetter = useRef();\n\n  function handleEditorDidMount(vg: any) {\n    setIsEditorReady(true);\n    valueGetter.current = vg;\n  }\n\n  function handlePlayClick() {\n    if (valueGetter) {\n      const editorValue = (valueGetter as any).current();\n      setResults(editorValue);\n    }\n  }\n\n  const { t } = useTranslation();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-start\">\n            <Typography variant=\"h6\" style={{ paddingRight: \"20px\" }}>{t(\"Pristine\")}</Typography>\n            <Typography variant=\"caption\" style={{ paddingRight: \"5px\" }}>\n              {t(\"typescript-react-material-ui-monaco-playground\")}\n            </Typography>\n            <IconButton onClick={handlePlayClick} disabled={!isEditorReady}>\n              <PlayCircle />\n            </IconButton>\n          </Grid>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-end\">\n            <LanguageMenu />\n            <Tooltip title={t(\"Toggle Dark Mode\")}>\n              <IconButton onClick={darkMode.toggle}>\n                {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n            </Tooltip>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <CssBaseline />\n      <SplitPane split=\"vertical\" minSize={100} maxSize={-100} defaultSize={\"35%\"} style={{ flexGrow: 1 }}>\n        <Editor\n          theme={darkMode.value ? \"dark\" : \"light\"}\n          editorDidMount={handleEditorDidMount}\n        />\n        <div>\n          {results}\n        </div>\n      </SplitPane>\n    </MuiThemeProvider>\n  );\n};\n\nexport default MyApp;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MyApp from \"./containers/MyApp\";\n\nReactDOM.render(<MyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}